#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Exemplo de Uso do M√≥dulo Telegram Sender
Demonstra como integrar notifica√ß√µes Telegram no KAIROS BOT
"""

import asyncio
import sys
from pathlib import Path

# Adiciona o diret√≥rio raiz ao path
sys.path.append(str(Path(__file__).parent))

from notifications.telegram_sender import TelegramSender, send_telegram_message, send_opportunity_notification
from utils.logger import get_logger

logger = get_logger(__name__)

async def exemplo_basico():
    """
    Exemplo b√°sico de envio de mensagem
    """
    print("\nüîπ Exemplo 1: Mensagem B√°sica")
    
    # M√©todo 1: Usando a fun√ß√£o de conveni√™ncia
    sucesso = await send_telegram_message("üß™ <b>Teste B√°sico</b>\n\n‚úÖ Mensagem enviada via fun√ß√£o de conveni√™ncia!")
    
    if sucesso:
        print("‚úÖ Mensagem b√°sica enviada com sucesso")
    else:
        print("‚ùå Falha ao enviar mensagem b√°sica")

async def exemplo_classe_completa():
    """
    Exemplo usando a classe TelegramSender completa
    """
    print("\nüîπ Exemplo 2: Classe Completa")
    
    try:
        # Criar inst√¢ncia do sender
        sender = TelegramSender()
        
        # Testar conex√£o
        if await sender.test_connection():
            print("‚úÖ Conex√£o estabelecida")
            
            # Enviar notifica√ß√£o de in√≠cio do sistema
            await sender.send_system_start()
            
            # Aguardar um pouco
            await asyncio.sleep(2)
            
            # Enviar resumo de an√°lise
            summary = {
                'total_games': 15,
                'games_with_opportunities': 4
            }
            await sender.send_analysis_summary(summary)
            
            print("‚úÖ Notifica√ß√µes enviadas")
        else:
            print("‚ùå Falha na conex√£o")
            
    except Exception as e:
        logger.error(f"Erro no exemplo: {e}")
        print(f"‚ùå Erro: {e}")

async def exemplo_oportunidade():
    """
    Exemplo de notifica√ß√£o de oportunidade
    """
    print("\nüîπ Exemplo 3: Oportunidade de Aposta")
    
    # Dados de exemplo de um jogo
    game_info = {
        'teams': 'Manchester United vs Liverpool',
        'league': 'Premier League',
        'url': 'https://www.excapper.com/?action=game&id=12345'
    }
    
    # Dados da oportunidade detectada
    opportunity = {
        'market_name': 'Resultado Final',
        'selection': 'Manchester United',
        'odds': '2.85',
        'ai_confidence': 92
    }
    
    # Enviar notifica√ß√£o
    sucesso = await send_opportunity_notification(game_info, opportunity)
    
    if sucesso:
        print("‚úÖ Oportunidade enviada com sucesso")
    else:
        print("‚ùå Falha ao enviar oportunidade")

async def exemplo_erro():
    """
    Exemplo de notifica√ß√£o de erro
    """
    print("\nüîπ Exemplo 4: Notifica√ß√£o de Erro")
    
    try:
        sender = TelegramSender()
        
        # Simular um erro
        error_message = "Falha na conex√£o com o site excapper.com - Timeout ap√≥s 30s"
        
        await sender.send_error_alert(error_message)
        print("‚úÖ Alerta de erro enviado")
        
    except Exception as e:
        print(f"‚ùå Erro ao enviar alerta: {e}")

async def exemplo_personalizado():
    """
    Exemplo de mensagem personalizada com formata√ß√£o HTML
    """
    print("\nüîπ Exemplo 5: Mensagem Personalizada")
    
    mensagem_personalizada = """
üéØ <b>AN√ÅLISE KAIROS CONCLU√çDA</b>

üìä <b>Estat√≠sticas:</b>
‚Ä¢ Jogos analisados: 25
‚Ä¢ Oportunidades encontradas: 7
‚Ä¢ Precis√£o m√©dia: 89.5%
‚Ä¢ Tempo de an√°lise: 3m 42s

üèÜ <b>Melhores Oportunidades:</b>
1. Barcelona vs Real Madrid - <code>Over 2.5</code> (94% confian√ßa)
2. Chelsea vs Arsenal - <code>BTTS</code> (87% confian√ßa)
3. PSG vs Lyon - <code>PSG Win</code> (91% confian√ßa)

üîó <a href="https://kairos-bot.com/dashboard">Ver Dashboard Completo</a>

‚è∞ Pr√≥xima an√°lise em 30 minutos
    """
    
    sucesso = await send_telegram_message(mensagem_personalizada)
    
    if sucesso:
        print("‚úÖ Mensagem personalizada enviada")
    else:
        print("‚ùå Falha ao enviar mensagem personalizada")

async def main():
    """
    Fun√ß√£o principal - executa todos os exemplos
    """
    print("ü§ñ KAIROS BOT - Exemplos de Integra√ß√£o Telegram")
    print("=" * 50)
    
    try:
        # Executar exemplos em sequ√™ncia
        await exemplo_basico()
        await asyncio.sleep(1)
        
        await exemplo_classe_completa()
        await asyncio.sleep(1)
        
        await exemplo_oportunidade()
        await asyncio.sleep(1)
        
        await exemplo_erro()
        await asyncio.sleep(1)
        
        await exemplo_personalizado()
        
        print("\n" + "=" * 50)
        print("‚úÖ Todos os exemplos executados com sucesso!")
        print("\nüí° Dicas de Integra√ß√£o:")
        print("‚Ä¢ Use send_telegram_message() para mensagens simples")
        print("‚Ä¢ Use TelegramSender() para controle completo")
        print("‚Ä¢ Sempre trate exce√ß√µes em produ√ß√£o")
        print("‚Ä¢ Configure rate limiting para evitar spam")
        print("‚Ä¢ Use HTML para formata√ß√£o rica das mensagens")
        
    except KeyboardInterrupt:
        print("\nüõë Execu√ß√£o interrompida pelo usu√°rio")
    except Exception as e:
        logger.error(f"Erro na execu√ß√£o: {e}")
        print(f"‚ùå Erro na execu√ß√£o: {e}")

if __name__ == "__main__":
    # Executar exemplos
    asyncio.run(main())